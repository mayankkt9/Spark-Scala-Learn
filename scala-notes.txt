Scala Language Doc link  - https://www.scala-lang.org/api/2.13.2/


Some Features of Scala Programming 
	- Supports both Functional Programming and Object Oriented Programming
	- Immutable Object (Object whose state cant)
	- Referential Transparency (function replaced by its result)


 Functional Programming is way of writing software application using only pure functions and immutable values.

 library design and data crunching problems (Read later)


 What functions are pure functions (Should statisfy all three approach)
 	- Input solely determines the output (There are no other global variable or any other input other than parameter that determines the output)
 	- The function doesnt change the input (Doesnt have pass by value or reference feature)
 	- The function doesnt do anything else except computing the output. (Doesnt change global variable state or do anything else)

If any function uses some global variable for calculation or changes global variable, this is an example of side effects in functions.
Pure functions are functions that doesnot have side effects.

How can we test if the function is the pure function 
	- Just test it for the referential Transparency.
	- That is replace the function references with the output value.

Why Pure Functions 
	- Encourages safe way of programming (No Surprises)
	- Composable or Modular (Function composition easy for pure functions)
	- Easy to test
	- Memoizable (Caching of deterministic functions) (Cache the results, compilers can also do that)
	- Can be lazy